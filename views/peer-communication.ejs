<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Peer Communication</title>
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        /* Container setup */
        .chat-container {
            display: flex;
            height: 89vh;
            background-color: #f1f1f1;
        }

        /* Staff List Styling */
        .staff-list {
            width: 25%;
            background-color: #fff;
            border-right: 1px solid #ccc;
            padding: 15px;
        }

        .staff-list h2 {
            margin-bottom: 20px;
        }

        .staff-list ul {
            list-style-type: none;
            padding: 0;
        }

        .staff-list button {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            background-color: #f96e5b;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            text-align: left;
        }

        .staff-list button:hover {
            background-color: #f55c5a;
        }

        /* Chat Box Styling */
        .chat-box {
            width: 75%;
            display: flex;
            flex-direction: column;
            background-color: #fff;
            padding: 20px;
        }

        /* Chat History Styling */
        .chat-history {
            flex-grow: 1;
            overflow-y: auto;
            padding-right: 20px;
            margin-bottom: 10px;
            border-bottom: 1px solid #ccc;
        }

        .chat-bubble {
            max-width: 60%;
            padding: 10px 15px;
            margin-bottom: 15px;
            border-radius: 15px;
            position: relative;
        }

        .sender-you {
            background-color: #f96e5b;
            color: white;
            align-self: flex-end;
            text-align: right;
            border-bottom-right-radius: 0;
        }

        .sender-them {
            background-color: #f1f1f1;
            color: #333;
            align-self: flex-start;
            text-align: left;
            border-bottom-left-radius: 0;
        }

        .chat-timestamp {
            display: block;
            font-size: 0.8em;
            color: #777;
            margin-top: 5px;
        }

        /* Chat Input Styling */
        .chat-input {
            display: flex;
            padding-top: 10px;
        }

        .chat-input input {
            flex-grow: 1;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 20px;
            margin-right: 10px;
            outline: none;
        }

        .chat-input button {
            padding: 10px 20px;
            background-color: #f96e5b;
            color: white;
            border: none;
            border-radius: 20px;
            cursor: pointer;
        }

        .chat-input button:hover {
            background-color: #f55c5a;
        }

        /* Date Divider Styling */
        .date-divider {
            text-align: center;
            font-weight: bold;
            margin: 10px 0;
            color: #333;
        }
        .main-content {
    flex: 1; /* This ensures the main content fills the height */
    display: flex;
    flex-direction: column;
    justify-content:flex-start; /* Center the content vertically */
    padding: 0px;
}
    </style>
</head>
<body>
            <!-- Navbar -->
            <header>
                <nav class="navbar">
                    <div class="navbar-left">
                        <!-- Make the "Azania" logo clickable -->
                        <a href="/" class="logo">Azania</a>
                    </div>
                    <div class="navbar-right">
                        <ul>
                            <li><a href="/get-app" class="get-app-btn">Get the App</a></li>
                        </ul>
                    </div>
                </nav>
            </header>
    <div class="main-content">   <!-- Include a script to define the global userId variable -->
    <script>
        const userId = <%= JSON.stringify(user.id) %>;
    </script>

    <div class="chat-container">
        <!-- Staff Members List -->
        <div class="staff-list">
            <h2>Staff Members</h2>
            <ul>
                <% staffMembers.forEach(function(staff) { %>
                    <li>
                        <button onclick="startChat('<%= staff.id %>', '<%= staff.first_name %> <%= staff.last_name %>')">
                            <%= staff.first_name %> <%= staff.last_name %>
                        </button>
                    </li>
                <% }) %>
            </ul>
        </div>

        <!-- Chat Box -->
        <div class="chat-box">
            <h2 id="chat-with">Chat with...</h2>
            <div id="chat-history" class="chat-history"></div>

            <!-- Chat Input -->
            <div class="chat-input">
                <input type="text" id="message" placeholder="Type a message...">
                <button onclick="sendMessage()">Send</button>
            </div>
        </div>
    </div>
</div>
<%- include('partials/footer') %>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        let currentReceiverId = null;

        function scrollToBottom() {
            const chatHistory = document.getElementById('chat-history');
            chatHistory.scrollTop = chatHistory.scrollHeight;
        }

        function startChat(receiverId, name) {
            currentReceiverId = receiverId;
            document.getElementById('chat-with').innerText = `Chatting with ${name}`;

            // Fetch chat history between the logged-in user and the selected staff member
            fetch(`/staff/chat-history/${receiverId}`)
                .then(res => res.json())
                .then(data => {
                    const chatHistory = document.getElementById('chat-history');
                    chatHistory.innerHTML = ''; // Clear previous chat history

                    let lastDate = '';
                    data.chatHistory.forEach(chat => {
                        const date = new Date(chat.timestamp);
                        const today = new Date();
                        const isToday = date.toDateString() === today.toDateString();
                        const isYesterday = date.toDateString() === new Date(today.setDate(today.getDate() - 1)).toDateString();

                        // Add a date divider for each new day
                        const dateLabel = isToday ? 'Today' : isYesterday ? 'Yesterday' : date.toDateString();
                        if (dateLabel !== lastDate) {
                            chatHistory.innerHTML += `<div class="date-divider">${dateLabel}</div>`;
                            lastDate = dateLabel;
                        }

                        const isSender = chat.sender_id === userId; // Identify if the current user is the sender
                        const senderClass = isSender ? 'sender-you' : 'sender-them';

                        chatHistory.innerHTML += `
                            <div class="${senderClass} chat-bubble">
                                ${chat.message}
                                <span class="chat-timestamp">${date.toLocaleTimeString()}</span>
                            </div>`;
                    });

                    // Scroll to the bottom after loading the chat history
                    scrollToBottom();
                });
        }

        function sendMessage() {
            const messageInput = document.getElementById('message');
            const message = messageInput.value;
            if (!message || !currentReceiverId) return;

            socket.emit('sendMessage', {
                receiverId: currentReceiverId,
                message
            });

            messageInput.value = ''; // Clear input field
        }

        socket.on('receiveMessage', (data) => {
            // Append the received message to the chat history
            if (data.senderId !== currentReceiverId && data.receiverId !== currentReceiverId) {
                return;
            }

            const chatHistory = document.getElementById('chat-history');
            const date = new Date();
            const isSender = data.senderId === userId;
            const senderClass = isSender ? 'sender-you' : 'sender-them';

            chatHistory.innerHTML += `
                <div class="${senderClass} chat-bubble">
                    ${data.message}
                    <span class="chat-timestamp">${date.toLocaleTimeString()}</span>
                </div>`;

            // Scroll to the bottom when a new message is received
            scrollToBottom();
        });
    </script>
</body>
</html>
